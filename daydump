
192.168.2.110/facspk?test_init&fct=serialnum&sno=RJBSPGH00000005&acs_data=RJBSF008D160AEFC 


nvs-set jiova-min-mem u16 1000



Thursday 16th jun
William
Compiled and tested the code for sending the same data to Speaker and NDP120 on the old idf (esp 3.2)
Compiled selva's syntiant code.


Joseph
fota prompt implementation

Friday
William
Debugging the echo reference issue in the old-idf
Supported Joseph for fota
Removed all the soldering from 7 speakers
Joseph
fota testing on 8 speakers
Got the board ready for sending it to sumit &elan

Tueday  14
William
test speaker and mic on the esp4.4 code 
Joseph 
Spent time for fota for 7 speakers 
Navin
bt/va/dlna testing


Monday Jun13

William 
Soldered 6 speakers 
Downloaded esp-idf 4.4 and compiled test code with errors

Navin
bt/va/dlna testing

Joseph
wrote acs data  and flashed 7 speaker with 1.3.22
sent jiova binary to yeow


Friday 10-Jun
William
Soldered 1 speaker
Navin
sanity test on 3 speakers

Joseph
tested va crash when bt is on


Thursday 09-06-22
william
completed fota testing for 5 speaker
supported elangovan for his git issue
gave new build  with library and build with source code to elangovan

Joseph
Sanity testing on 2 speaker
Checked VA crash during BT on and connected.

Navin
Sanity test on 4 speaker
Spend time on ota test tool


Friday 03-06-20
Navin
Erased and flashed 1.3.22 on 1 speaker 
Started testing 1.3.22 in the old board
Joseph
Started testing 1.3.22 in the old board
Started working on cpu-dump test tool
William 
Erased and flashed 1.3.22 on 2nd speaker
Debugged the secured boot check fail error.
Found the wrong QR code issue and Mac id 


Monday 06- 06-20

Navin
read secure boot document

Joseph
read secure boot document

William
soldered 1 speaker
debugged the acs data issue
Flashed FT and wrote ACS data 
Fota upgrade to 1.3.22 on 1 speaker

Tuesday 07-06-20
Navin- 
Practiced soldering on the damaged board
learned acs_data_gen code
Joseph- 
Practiced soldering on the damaged board
learned acs_data_gen code

William
Soldered 2 more devices
Flashed FT and wrote ACS data on 2 more speaker
Completed fota upgrade on 2 more speaker


Wednesday 08-06-20
William , Joseph , Navin
Tested 1.3.22  on new speakers








----------------------------Toolchain kl720

sudo docker cp  edf75761b2af:/workspace/examples/LittleNet/test_api.py .
sudo docker start -i edf75761b2af
sudo docker run -it -v /mnt/docker:/docker_mount kneron/toolchain:latest

----------------------------Git for workdump
Goto to ~/
git clone https://github.com/WilliamVJacob/workdump.git
git add
git commit
git remote set-url origin https://williamvjacob:asking1234567890@github.com/WilliamVJacob/workdump.git
git remote set-url origin https://williamvjacob:vazhatharahouse@github.com/WilliamVJacob/workdump.git

git push origin main



----------Gedit-------
Multiline edit Ctrl+E

Ctrl+ I	Move the cursor to a specific line number.
Ctrl + G - Replace 
Ctrl + M / Ctrl + shift + m -  Comment /Uncomment
Ctrl + BkSpce	Delete the word behind the cursor.
Ctrl + Del	Delete the word ahead of the cursor.
Shift +Ctrl +BkSpce	Delete from the cursor to the beginning of the line.
Shift+Ctrl+Del	Delete from the cursor to the end of the line.
Ctrl+ D	Delete the current line.
Alt +↑/↓ Move (drag) current line	

--------------------Bt pairing 

pair 00:00:AB:CD:5D:BA
trust 00:00:AB:CD:5D:BA
connect 00:00:AB:CD:5D:BA
remove 00:00:AB:CD:5D:BA
00:00:AB:CD:5D:BA

pacmd set-card-profile bluez_card.00_00_AB_CD_5D_BA a2dp_sink
pacmd set-default-sink bluez_sink.00_00_AB_CD_5D_BA.a2dp_sink

wget http://youness.net/wp-content/uploads/2016/08/h2g2.ogg -P /tmp/
paplay /tmp/h2g2.ogg




--------------To install respeaker driver ac108  , follow the steps below
sudo apt-get update

sudo apt-get upgrade

git clone https://github.com/respeaker/seeed-voicecard.git

cd seeed-voicecard


open install.sh and change the line 
FORCE_KERNEL="1.20201022-1"
kernels="5.4.72-v8+"

open Makefile and add the line before ifdef DEBUG

 ccflags-y += -fno-stack-protector

sudo ./install.sh --compat-kernel

reboot

#prerequiste
cd $HOME
mkdir alexa    
cd alexa
mkdir build source third-party application-necessities  
cd application-necessities
mkdir sound-files
 
sudo apt-get update && sudo apt-get upgrade -y
cd $HOME
sudo apt-get install -y \
git gcc cmake openssl clang-format libgstreamer1.0-0 libgstreamer-plugins-base1.0-dev \
gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools \
pulseaudio doxygen libsqlite3-dev repo libasound2-dev

# install curl
sudo apt-get -y install build-essential nghttp2 libnghttp2-dev libssl-dev
wget https://curl.haxx.se/download/curl-7.63.0.tar.gz
tar xzf curl-7.63.0.tar.gz
cd curl-7.63.0
./configure --with-nghttp2 --prefix=/usr/local --with-ssl
make && sudo make install
sudo ldconfig

#Install and configure PortAudio.
cd ../third-party
wget -c http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz
tar xf pa_stable_v190600_20161030.tgz
cd portaudio
./configure --without-jack && make


# alexa download & compile 
cd $HOME/alexa/source
cd $HOME/alexa/sourcegit clone https://github.com/alexa/avs-device-sdk.git 
cd $HOME/alexa/build 
cmake $HOME/alexa/source/avs-device-sdk \ -DGSTREAMER_MEDIA_PLAYER=ON \ -DPORTAUDIO=ON \ -DPORTAUDIO_LIB_PATH=$HOME/alexa/third-party/portaudio/lib/.libs/libportaudio.so \ -DPORTAUDIO_INCLUDE_DIR=$HOME/alexa/third-party/portaudio/include \ -DCMAKE_BUILD_TYPE=DEBUG 
make SampleApp -j2 

# building alexa
mkdir $HOME/alexa/build/Integration/database



cd $HOME/alexa/source/avs-device-sdk/tools/Install 
cmake $HOME/alexa/source/avs-device-sdk \
 -DGSTREAMER_MEDIA_PLAYER=ON \
 -DPORTAUDIO=ON \
 -DPORTAUDIO_LIB_PATH=$HOME/alexa/third-party/portaudio/lib/.libs/libportaudio.so \
 -DPORTAUDIO_INCLUDE_DIR=$HOME/alexa/third-party/portaudio/include \
 -DCMAKE_BUILD_TYPE=DEBUG
 
  cmake $HOME/alexa/source/avs-device-sdk  -DGSTREAMER_MEDIA_PLAYER=ON  -DPORTAUDIO=ON  -DPORTAUDIO_LIB_PATH=$HOME/alexa/third-party/portaudio/lib/.libs/libportaudio.so -DPORTAUDIO_INCLUDE_DIR=$HOME/alexa/third-party/portaudio/include  -DCMAKE_BUILD_TYPE=DEBUG

# create config file
bash genConfig.sh config.json 12345 \
   $HOME/alexa/build/Integration/database \
   $HOME/alexa/source/avs-device-sdk \
   $HOME/alexa/build/Integration/AlexaClientSDKConfig.json \
   -DSDK_CONFIG_MANUFACTURER_NAME="alexa" \
   -DSDK_CONFIG_DEVICE_DESCRIPTION="ubuntu"


# run alexa
./SampleApp/src/SampleApp ./Integration/AlexaClientSDKConfig.json


# compile and run test
make all test

make all integration

./Integration/test/SpeechSynthesizerIntegrationTest ./Integration/AlexaClientSDKConfig.json   ../source/avs-device-sdk/Integration/inputs 
./Integration/test/JioPodSpeechTest ./Integration/AlexaClientSDKConfig.json   ../source/avs-device-sdk/Integration/inputs 






Copy SPI image to spi flash 
Berlin> u <file name in Uboot directoy> 0x10000000
Berlin> spinit
Berlin> erase f0000000 f00fffff
Berlin> cp.b 0x10000000 0xf0000000 0xf00000;


arecord -d 4 -f S16_LE -c 1 -r 16000 recognize_jio_test.wav




How to enable VFP feature in cortex a53 64bit kernel for armv7 architecture

Hi,

I got the below"cpuinfo" information in my cortex a53 machine. Can you tell if  VFP feature is enabled in my machine ? If it is not enabled, how to enable VFP for 64bit kernel.

$cat /proc/cpuinfo
processor : 0
BogoMIPS : 50.00
Features : fp asimd aes pmull sha1 sha2 crc32 cpuid
CPU implementer : 0x41
CPU architecture: 8
CPU variant : 0x0
CPU part : 0xd03
CPU revision : 4

processor : 1
BogoMIPS : 50.00
Features : fp asimd aes pmull sha1 sha2 crc32 cpuid
CPU implementer : 0x41
CPU architecture: 8
CPU variant : 0x0
CPU part : 0xd03
CPU revision : 4

processor : 2
BogoMIPS : 50.00
Features : fp asimd aes pmull sha1 sha2 crc32 cpuid
CPU implementer : 0x41
CPU architecture: 8
CPU variant : 0x0
CPU part : 0xd03
CPU revision : 4

processor : 3
BogoMIPS : 50.00
Features : fp asimd aes pmull sha1 sha2 crc32 cpuid
CPU implementer : 0x41
CPU architecture: 8
CPU variant : 0x0
CPU part : 0xd03
CPU revision : 4



ubuntu arecord: main:722: audio open error: Device or resource busy
lsof | grep snd
 find the audio ipc which is blocking the device 

/not  a solution
fuser -fv /dev/snd/* /dev/dsp*




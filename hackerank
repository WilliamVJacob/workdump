Mini max
#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the miniMaxSum function below.
def miniMaxSum(arr):
    max_sum = sum(arr)
    sum_except_one = max_sum - arr[0];
    sum_except_two = max_sum - arr[1];
    sum_except_three = max_sum - arr[2];
    sum_except_four = max_sum - arr[3];
    sum_except_five = max_sum - arr[4];
    maxnum = max(sum_except_one,sum_except_two,sum_except_three,sum_except_four,sum_except_five)
    minnum = min(sum_except_one,sum_except_two,sum_except_three,sum_except_four,sum_except_five)
    print(minnum, maxnum)
if __name__ == '__main__':
    arr = list(map(int, input().rstrip().split()))

    miniMaxSum(arr)


#####################################################################Compare the Triplets#####################################################################
#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the compareTriplets function below.
def compareTriplets(a, b):
    result = [0,0]
    for i in range(3):
        if  a[i] > b[i]:
            result[0] += 1 
        elif b[i] > a[i]:
            result[1] += 1 
        print(a[i] , b[i])
    return result
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    a = list(map(int, input().rstrip().split()))

    b = list(map(int, input().rstrip().split()))

    result = compareTriplets(a, b)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

    fptr.close()

#Big numbers

#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the aVeryBigSum function below.
def aVeryBigSum(ar):
    sum = 0
    for i in ar:
        sum += i
    return (sum)
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    ar_count = int(input())

    ar = list(map(int, input().rstrip().split()))

    result = aVeryBigSum(ar)

    fptr.write(str(result) + '\n')

    fptr.close()

### Diagonal Difference

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'diagonalDifference' function below.
#
# The function is expected to return an INTEGER.
# The function accepts 2D_INTEGER_ARRAY arr as parameter.
#

def diagonalDifference(arr):
    primary_sum = 0
    secondary_sum = 0
    for r in  range(len(arr)):
        for c in range(len(arr[r])):
            if r == c:
                primary_sum +=arr[r][c]
            if r + c == len(arr)-1:
                print(r,c)
                secondary_sum +=arr[r][c]
    
    return abs(primary_sum - secondary_sum)             


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    arr = []

    for _ in range(n):
        arr.append(list(map(int, input().rstrip().split())))

    result = diagonalDifference(arr)

    fptr.write(str(result) + '\n')

    fptr.close()
    
    
   #####plus minus
   
   
    #!/bin/python3

import math
import os
import random
import re
import sys

# Complete the plusMinus function below.
def plusMinus(arr):
    pos_count = 0 
    neg_count = 0
    zero_count = 0 
    for num in arr:
        if num > 0 :
            pos_count += 1
            
        elif num < 0:
            neg_count += 1
        else :
            zero_count += 1
    print('%.6f'%(pos_count / len(arr)))
    print('%.6f'%(neg_count / len(arr)))
    print('%.6f'%(zero_count / len(arr)))


if __name__ == '__main__':
    n = int(input())

    arr = list(map(int, input().rstrip().split()))

    plusMinus(arr)
    
    
    
    
    #staircase
    
    #!/bin/python3

import math
import os
import random
import re
import sys

# Complete the staircase function below.
def staircase(n):
    k=1
    for i in range ( n,0,-1):
        
        for j in range(n-k):
            print(" ",end='')
        for j in range(k):    
            print("#",end='')   
        print("")
        k += 1
if __name__ == '__main__':
    n = int(input())

    staircase(n)


